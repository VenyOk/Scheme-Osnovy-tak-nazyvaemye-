;O(n)
(define (my-range a b d)
  (define (loop n res)
    (if (>= n b)
        res
        (loop (+ d n) (append res (cons n '())))))
  (loop a '()))


;O(n)
(define (my-element? x xs)
  (define (loop arr)
    (and (not(null? arr))
        (or (equal? (car arr) x)
            (loop (cdr arr)))))
  (loop xs))

;O(n^2) Это ачивка на 1 балл
(define (my-flatten lst)
  (define (loop lis res)
    (cond ((null? lis) res)
          ((pair? lis) (loop (car lis) (loop (cdr lis) res)))
          (else (cons lis res))))
  (loop lst '()))
;O(n)
(define (my-filter pred? xs)
  (define (loop arr arr2)
    (if (not(null? arr))
        (if (pred? (car arr))
            (loop (cdr arr) (append arr2 (cons (car arr) '())))
            (loop (cdr arr) arr2))
        arr2))
  (loop xs '()))

;O(n^2)
(define (my-fold-right op xs)
  (if (> (length xs) 1)
      (op (car xs) (my-fold-right op (cdr xs)))
      (car xs)))
;O(n^2)
(define (my-fold-left op xs)
  (if (> (length xs) 1)
      (my-fold-left op (cons (op (car xs) (cadr xs)) (cddr xs)))
      (car xs)))

